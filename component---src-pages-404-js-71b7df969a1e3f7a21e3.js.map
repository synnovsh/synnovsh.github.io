{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Head","styled","header","withConfig","displayName","componentId","Hamburger","div","Nav","nav","props","show","NavItems","ul","blink","keyframes","Logo","Header","_useState","useState","toggleShow","react_default","gatsby_browser_entry","to","className","onClick","type","StyledLayout","Footer","footer","Content","Layout","children","_856328897","siteTitle"],"mappings":"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","file":"component---src-pages-404-js-71b7df969a1e3f7a21e3.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport React, { useState } from \"react\"\nimport styled, { keyframes } from \"styled-components\"\n\nconst Head = styled.header`\n  position: fixed;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 10;\n  background-color: rgba(255,255,255, 0.9);\n  border-bottom: 1px solid rgba(0,0,0,0.1);\n\n\n  a {\n    text-decoration: none;\n  }\n`\nconst Hamburger = styled.div`\n  margin-right: 25px;\n  input {\n    display: block;\n    width: 30px;\n    height: 30px;\n    position: absolute;\n    cursor: pointer;\n    opacity: 0; \n    z-index: 2; \n  }\n\n  span {\n    &:not(:last-child) {\n      margin-bottom: 6px;\n    }\n    display: block;\n    width: 30px;\n    height: 2px;\n    position: relative;\n    background: rgba(0,0,0,1);\n    border-radius: 3px;\n    z-index: 1;\n    transform-origin: 4px 0px;\n    transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0),\n                background 0.5s cubic-bezier(0.77,0.2,0.05,1.0),\n                opacity 0.55s ease;\n  }\n\n  span:first-child {\n    transform-origin: 0% 0%;\n  }\n\n  span:nth-last-child(2) {\n    transform-origin: 0% 100%;\n  }\n\n  input:checked ~ span {\n    transform: rotate(45deg);\n  }\n\n  input:checked ~ span:nth-last-child(2) {\n    opacity: 0;\n  }\n\n  input:checked ~ span:nth-last-child(1) {\n    transform: rotate(-45deg);\n  }\n\n  input:checked ~ a {\n    color: red;\n  }`\n\nconst Nav = styled.nav`\n  // need both, one for transition, one for hiding it away from top\n  visibility: ${props => props.show ? 'visible' : 'hidden'};\n  opacity: ${props => props.show ? '1' : '0'};\n  position: absolute;\n  top: 0; right:0;\n  background-color: rgba(255,255,255,0.9);\n  width: 100vw;\n  height: 100vh;\n  transition: opacity 0.5s, visibility 0.5s;\n`\n\nconst NavItems = styled.ul` \n  display: flex;\n  flex-direction: column;\n  margin-top: 20vh;\n  margin-right: 25px;\n  \n  li {\n    margin-left: auto;\n    margin-top: .5em;\n    font-size: calc(1.8em + 1vw);\n    a {\n      text-align: right;\n      color: inherit;\n      &:hover {\n        border-bottom: 2px solid #FFAC00;\n      }\n    }\n  }\n`\nconst blink = keyframes`\n  from, to { \n    border-color: transparent \n  }\n  50% { \n    border-color: white; \n  }\n`\nconst Logo = styled.div`\n  display: inline-block;\n  background-color: rgba(0, 0, 0, 0.9);\n  width: 40px;\n  height: 40px;\n  margin: 10px 0px;\n  margin-left: 25px;\n  color: white;\n  font-family: monospace;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  aling-content: center;\n\n  .typewrite {\n    display: inline-block;\n    overflow: hidden;\n    white-space: nowrap;\n    border-right: 4px solid white;\n    box-sizing: border-box;\n    animation: ${blink} 1s step-end infinite;\n  }\n`\n\nconst Header = () => {\n  const [show, toggleShow] = useState(false);\n  return (\n    <Head>\n      <Link to=\"/\">\n        <Logo>\n          <span>{`$ `}</span>\n          <div className=\"typewrite\">ssh</div>\n        </Logo>\n      </Link>\n      <Nav show={show}>\n        <NavItems>\n          <li>\n            <Link to=\"/about\">About Me</Link>\n          </li>\n          <li>\n            <Link to=\"/projects\">Projects</Link>\n          </li>\n          <li>\n            <Link to=\"/illustrations\">Illustrations</Link>\n          </li>\n        </NavItems>\n      </Nav>\n      <Hamburger>\n          <input onClick={() => toggleShow(!show)} type=\"checkbox\" />\n          <span></span>\n          <span></span>\n          <span></span>\n        </Hamburger>\n    </Head>\n  )\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport \"typeface-montserrat\"\nimport \"typeface-lato\"\nimport \"./normalize.css\"\nimport \"./reset.css\"\nimport \"./typography.css\"\n\nimport Header from \"./header\"\n\nconst StyledLayout = styled.div`\n  display: grid;\n  grid-template-columns: 25px 1fr 25px;\n  grid-template-rows: auto 1fr auto;\n\n  header {\n    grid-area: 1/2;\n  }\n\n  footer {\n    grid-area: 3/2;\n  }\n`\n\nconst Footer = styled.footer`\n  height: 100px;\n`\n\nconst Content = styled.div`\n  grid-area: 2/2;\n  display: flex;\n  min-height: 100vh;\n  flex-direction: column;\n  main {\n    padding-top: 150px;\n    img {\n      max-width: 100%;\n    }\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  p > a {\n    color: inherit;\n    border-bottom: 2px solid #FFAC00;\n    &:hover {\n      opacity: 0.9;\n    }\n  }\n`\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <StyledLayout>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <Content>\n        <main>{children}</main>\n      </Content>\n      <Footer>\n      </Footer>\n    </StyledLayout>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}