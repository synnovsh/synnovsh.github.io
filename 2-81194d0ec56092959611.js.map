{"version":3,"sources":["webpack:///./node_modules/@sanity/image-url/index.js","webpack:///./node_modules/@sanity/block-content-to-react/lib/BlockContent.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/internals.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/getImageUrl.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/mergeSerializers.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/internals.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/serializers.js","webpack:///./node_modules/@sanity/generate-help-url/index.js","webpack:///./node_modules/@sanity/image-url/lib/builder.js","webpack:///./node_modules/@sanity/image-url/lib/urlForImage.js","webpack:///./node_modules/@sanity/image-url/lib/parseSource.js","webpack:///./node_modules/@sanity/image-url/lib/parseAssetId.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/blocksToNodes.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/buildMarksTree.js","webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/nestLists.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/generateKeys.js","webpack:///./node_modules/@sanity/block-content-to-react/lib/targets/dom.js"],"names":["module","exports","__webpack_require__","React","PropTypes","internals","_require","serializers","serializeSpan","renderProps","getImageUrl","blocksToNodes","mergeSerializers","renderNode","createElement","SanityBlockContent","props","customSerializers","defaultSerializers","blockProps","Object","assign","blocks","propTypes","className","string","renderContainerOnSingleChild","bool","projectId","dataset","imageOptions","object","shape","types","marks","list","func","listItem","block","span","oneOfType","arrayOf","_type","isRequired","defaultProps","generateHelpUrl","urlBuilder","objectAssign","enc","encodeURIComponent","materializeError","concat","node","options","asset","Error","url","query","keys","length","params","map","key","join","getQueryString","_ref","image","toString","_typeof","obj","Symbol","iterator","constructor","prototype","userSerializers","reduce","acc","type","getSerializers","_blocksToNodes","h","serializerOpts","serializeOptions","useDashedStyles","RawMarkSerializer","tag","children","style","test","img","src","isInline","strong","bind","em","code","underline","text-decoration","textDecoration","strike-through","link","href","mark","blockType","serializer","_props$node","markType","console","warn","markFallback","hardBreak","container","text","undefined","empty","index","child","i","serializeNode","serializedNode","_key","slug","defineProperty","value","clientConfig","ImageUrlBuilder","baseUrl","apiHost","replace","_urlForImage","__esModule","default","_defineProperty","enumerable","configurable","writable","_defineProperties","target","descriptor","validFits","validCrops","validAutoModes","parent","instance","Constructor","TypeError","_classCallCheck","this","arguments","source","ownKeys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","forEach","_objectSpread","protoProps","staticProps","withOptions","_dataset","_projectId","_bg","bg","_width","width","_height","height","x","y","focalPoint","_maxWidth","maxWidth","_minWidth","minWidth","_maxHeight","maxHeight","_minHeight","minHeight","_blur","blur","_sharpen","sharpen","left","top","rect","_format","format","_invert","invert","_orientation","orientation","_quality","quality","download","flipHorizontal","flipVertical","ignoreImageParams","indexOf","fit","crop","auto","spec","_parseSource","_parseAssetId","_id","Math","round","right","bottom","hotSpotVerticalRadius","hotspot","hotSpotHorizontalRadius","hotSpotCenterX","hotSpotCenterY","result","desiredAspectRatio","_top","hotspotXCenter","_left","max","floor","cdnUrl","filename","id","isEffectiveCrop","push","SPEC_NAME_TO_URL_NAME_MAPPINGS","mapping","arr","_mapping","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","next","done","err","_iterableToArrayLimit","_nonIterableRest","specName","param","specToImageUrl","get","_interopRequireDefault","urlToId","parts","split","slice","applyDefaults","_slicedToArray","ref","_ref$split2","dimensionString","example","_dimensionString$spli2","imgWidthStr","imgHeightStr","isFinite","buildMarksTree","nestLists","generateKeys","optionProps","isDefined","val","defaults","isListItem","properties","rawBlocks","keyedBlocks","listNestMode","opts","siblings","level","serializeListItem","findListItemIndex","isSpan","serializeBlock","Boolean","nodes","containerProps","defaultMarks","sortMarksByOccurences","spans","markOccurences","occurences","siblingIndex","sibling","sortByOccurence","markA","markB","aOccurences","bOccurences","aDefaultPos","bDefaultPos","sort","markDefs","sortedMarks","rootNode","nodeStack","marksNeeded","pos","markKey","splice","currentNode","findLastParentNode","find","def","lines","line","$export","$find","forced","P","F","callbackfn","isListBlock","blockMatchesList","listFromBlock","lastChild","findListMatching","matching","filterOnType","currentList","mode","tree","newList","lastListItem","newLastChild","match","_match","checksum","str","hash","strlen","charCodeAt","item","JSON","stringify","_getSerializers","nestMarks"],"mappings":"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","file":"2-81194d0ec56092959611.js","sourcesContent":["// eslint-disable-next-line import/no-commonjs\nmodule.exports = require('./lib/builder')[\"default\"];","'use strict';\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nvar React = require('react');\n\nvar PropTypes = require('prop-types');\n\nvar internals = require('@sanity/block-content-to-hyperscript/internals');\n\nvar _require = require('./targets/dom'),\n    serializers = _require.serializers,\n    serializeSpan = _require.serializeSpan,\n    renderProps = _require.renderProps;\n\nvar getImageUrl = internals.getImageUrl,\n    blocksToNodes = internals.blocksToNodes,\n    mergeSerializers = internals.mergeSerializers;\nvar renderNode = React.createElement;\n\nvar SanityBlockContent = function SanityBlockContent(props) {\n  var customSerializers = mergeSerializers(SanityBlockContent.defaultSerializers, props.serializers);\n  var blockProps = Object.assign({}, renderProps, props, {\n    serializers: customSerializers,\n    blocks: props.blocks || []\n  });\n  return blocksToNodes(renderNode, blockProps, serializers, serializeSpan);\n}; // Expose default serializers to the user\n\n\nSanityBlockContent.defaultSerializers = serializers; // Expose logic for building image URLs from an image reference/node\n\nSanityBlockContent.getImageUrl = getImageUrl;\nSanityBlockContent.propTypes = {\n  className: PropTypes.string,\n  renderContainerOnSingleChild: PropTypes.bool,\n  // When rendering images, we need project id and dataset, unless images are materialized\n  projectId: PropTypes.string,\n  dataset: PropTypes.string,\n  imageOptions: PropTypes.object,\n  serializers: PropTypes.shape({\n    // Common overrides\n    types: PropTypes.object,\n    marks: PropTypes.object,\n    // Less common overrides\n    list: PropTypes.func,\n    listItem: PropTypes.func,\n    // Low-level serializers\n    block: PropTypes.func,\n    span: PropTypes.func\n  }),\n  blocks: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.shape({\n    _type: PropTypes.string.isRequired\n  })), PropTypes.shape({\n    _type: PropTypes.string.isRequired\n  })]).isRequired\n};\nSanityBlockContent.defaultProps = {\n  renderContainerOnSingleChild: false,\n  serializers: {},\n  imageOptions: {}\n};\nmodule.exports = SanityBlockContent;","module.exports = require('./lib/internals');","\"use strict\";\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nvar generateHelpUrl = require('@sanity/generate-help-url');\n\nvar urlBuilder = require('@sanity/image-url');\n\nvar objectAssign = require('object-assign');\n\nvar enc = encodeURIComponent;\nvar materializeError = \"You must either:\\n  - Pass `projectId` and `dataset` to the block renderer\\n  - Materialize images to include the `url` field.\\n\\nFor more information, see \".concat(generateHelpUrl('block-content-image-materializing'));\n\nvar getQueryString = function getQueryString(options) {\n  var query = options.imageOptions;\n  var keys = Object.keys(query);\n\n  if (!keys.length) {\n    return '';\n  }\n\n  var params = keys.map(function (key) {\n    return \"\".concat(enc(key), \"=\").concat(enc(query[key]));\n  });\n  return \"?\".concat(params.join('&'));\n};\n\nvar buildUrl = function buildUrl(props) {\n  var node = props.node,\n      options = props.options;\n  var projectId = options.projectId,\n      dataset = options.dataset;\n  var asset = node.asset;\n\n  if (!asset) {\n    throw new Error('Image does not have required `asset` property');\n  }\n\n  if (asset.url) {\n    return asset.url + getQueryString(options);\n  }\n\n  if (!projectId || !dataset) {\n    throw new Error(materializeError);\n  }\n\n  var ref = asset._ref;\n\n  if (!ref) {\n    throw new Error('Invalid image reference in block, no `_ref` found on `asset`');\n  }\n\n  return urlBuilder(objectAssign({\n    projectId: projectId,\n    dataset: dataset\n  }, options.imageOptions || {})).image(node).toString();\n};\n\nmodule.exports = buildUrl;","\"use strict\";\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar objectAssign = require('object-assign');\n\nvar isDefined = function isDefined(val) {\n  return typeof val !== 'undefined';\n}; // Recursively merge/replace default serializers with user-specified serializers\n\n\nmodule.exports = function mergeSerializers(defaultSerializers, userSerializers) {\n  return Object.keys(defaultSerializers).reduce(function (acc, key) {\n    var type = _typeof(defaultSerializers[key]);\n\n    if (type === 'function') {\n      acc[key] = isDefined(userSerializers[key]) ? userSerializers[key] : defaultSerializers[key];\n    } else if (type === 'object') {\n      acc[key] = objectAssign({}, defaultSerializers[key], userSerializers[key]);\n    } else {\n      acc[key] = typeof userSerializers[key] === 'undefined' ? defaultSerializers[key] : userSerializers[key];\n    }\n\n    return acc;\n  }, {});\n};","\"use strict\";\n\nvar getSerializers = require('./serializers');\n\nvar _blocksToNodes = require('./blocksToNodes');\n\nvar getImageUrl = require('./getImageUrl');\n\nvar mergeSerializers = require('./mergeSerializers');\n\nmodule.exports = {\n  blocksToNodes: function blocksToNodes(renderNode, props, defaultSerializers, serializeSpan) {\n    if (defaultSerializers) {\n      return _blocksToNodes(renderNode, props, defaultSerializers, serializeSpan);\n    } // Backwards-compatibility\n\n\n    var serializers = getSerializers(renderNode);\n    return _blocksToNodes(renderNode, props, serializers.defaultSerializers, serializers.serializeSpan);\n  },\n  getSerializers: getSerializers,\n  getImageUrl: getImageUrl,\n  mergeSerializers: mergeSerializers\n};","\"use strict\";\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nvar objectAssign = require('object-assign');\n\nvar getImageUrl = require('./getImageUrl');\n\nmodule.exports = function (h, serializerOpts) {\n  var serializeOptions = serializerOpts || {\n    useDashedStyles: false // Low-level block serializer\n\n  };\n\n  function BlockSerializer(props) {\n    var node = props.node,\n        serializers = props.serializers,\n        options = props.options,\n        isInline = props.isInline,\n        children = props.children;\n    var blockType = node._type;\n    var serializer = serializers.types[blockType];\n\n    if (!serializer) {\n      throw new Error(\"Unknown block type \\\"\".concat(blockType, \"\\\", please specify a serializer for it in the `serializers.types` prop\"));\n    }\n\n    return h(serializer, {\n      node: node,\n      options: options,\n      isInline: isInline\n    }, children);\n  } // Low-level span serializer\n\n\n  function SpanSerializer(props) {\n    var _props$node = props.node,\n        mark = _props$node.mark,\n        children = _props$node.children;\n    var isPlain = typeof mark === 'string';\n    var markType = isPlain ? mark : mark._type;\n    var serializer = props.serializers.marks[markType];\n\n    if (!serializer) {\n      // @todo Revert back to throwing errors?\n      // eslint-disable-next-line no-console\n      console.warn(\"Unknown mark type \\\"\".concat(markType, \"\\\", please specify a serializer for it in the `serializers.marks` prop\"));\n      return h(props.serializers.markFallback, null, children);\n    }\n\n    return h(serializer, props.node, children);\n  } // Low-level list serializer\n\n\n  function ListSerializer(props) {\n    var tag = props.type === 'bullet' ? 'ul' : 'ol';\n    return h(tag, null, props.children);\n  } // Low-level list item serializer\n\n\n  function ListItemSerializer(props) {\n    var children = !props.node.style || props.node.style === 'normal' ? // Don't wrap plain text in paragraphs inside of a list item\n    props.children : // But wrap any other style in whatever the block serializer says to use\n    h(props.serializers.types.block, props, props.children);\n    return h('li', null, children);\n  } // Renderer of an actual block of type `block`. Confusing, we know.\n\n\n  function BlockTypeSerializer(props) {\n    var style = props.node.style || 'normal';\n\n    if (/^h\\d/.test(style)) {\n      return h(style, null, props.children);\n    }\n\n    return style === 'blockquote' ? h('blockquote', null, props.children) : h('p', null, props.children);\n  } // Serializers for things that can be directly attributed to a tag without any props\n  // We use partial application to do this, passing the tag name as the first argument\n\n\n  function RawMarkSerializer(tag, props) {\n    return h(tag, null, props.children);\n  }\n\n  function UnderlineSerializer(props) {\n    var style = serializeOptions.useDashedStyles ? {\n      'text-decoration': 'underline'\n    } : {\n      textDecoration: 'underline'\n    };\n    return h('span', {\n      style: style\n    }, props.children);\n  }\n\n  function StrikeThroughSerializer(props) {\n    return h('del', null, props.children);\n  }\n\n  function LinkSerializer(props) {\n    return h('a', {\n      href: props.mark.href\n    }, props.children);\n  }\n\n  function ImageSerializer(props) {\n    if (!props.node.asset) {\n      return null;\n    }\n\n    var img = h('img', {\n      src: getImageUrl(props)\n    });\n    return props.isInline ? img : h('figure', null, img);\n  } // Serializer that recursively calls itself, producing a hyperscript tree of spans\n\n\n  function serializeSpan(span, serializers, index, options) {\n    if (span === '\\n' && serializers.hardBreak) {\n      return h(serializers.hardBreak, {\n        key: \"hb-\".concat(index)\n      });\n    }\n\n    if (typeof span === 'string') {\n      return serializers.text ? h(serializers.text, {\n        key: \"text-\".concat(index)\n      }, span) : span;\n    }\n\n    var children;\n\n    if (span.children) {\n      children = {\n        children: span.children.map(function (child, i) {\n          return options.serializeNode(child, i, span.children, true);\n        })\n      };\n    }\n\n    var serializedNode = objectAssign({}, span, children);\n    return h(serializers.span, {\n      key: span._key || \"span-\".concat(index),\n      node: serializedNode,\n      serializers: serializers\n    });\n  }\n\n  var HardBreakSerializer = function HardBreakSerializer() {\n    return h('br');\n  };\n\n  var defaultMarkSerializers = {\n    strong: RawMarkSerializer.bind(null, 'strong'),\n    em: RawMarkSerializer.bind(null, 'em'),\n    code: RawMarkSerializer.bind(null, 'code'),\n    underline: UnderlineSerializer,\n    'strike-through': StrikeThroughSerializer,\n    link: LinkSerializer\n  };\n  var defaultSerializers = {\n    // Common overrides\n    types: {\n      block: BlockTypeSerializer,\n      image: ImageSerializer\n    },\n    marks: defaultMarkSerializers,\n    // Less common overrides\n    list: ListSerializer,\n    listItem: ListItemSerializer,\n    block: BlockSerializer,\n    span: SpanSerializer,\n    hardBreak: HardBreakSerializer,\n    // Container element\n    container: 'div',\n    // When we can't resolve the mark properly, use this renderer as the container\n    markFallback: 'span',\n    // Allow overriding text renderer, but leave undefined to just use plain strings by default\n    text: undefined,\n    // Empty nodes (React uses null, hyperscript with empty strings)\n    empty: ''\n  };\n  return {\n    defaultSerializers: defaultSerializers,\n    serializeSpan: serializeSpan\n  };\n};","var baseUrl = 'https://docs.sanity.io/help/';\n\nmodule.exports = function generateHelpUrl(slug) {\n  return baseUrl + slug;\n};","\"use strict\";\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = urlBuilder;\n\nvar _urlForImage = _interopRequireDefault(require(\"./urlForImage\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar validFits = ['clip', 'crop', 'fill', 'fillmax', 'max', 'scale', 'min'];\nvar validCrops = ['top', 'bottom', 'left', 'right', 'center', 'focalpoint', 'entropy'];\nvar validAutoModes = ['format'];\n\nvar ImageUrlBuilder =\n/*#__PURE__*/\nfunction () {\n  function ImageUrlBuilder(parent, options) {\n    _classCallCheck(this, ImageUrlBuilder);\n\n    if (parent) {\n      this.options = _objectSpread({}, parent.options || {}, options || {});\n    } else {\n      this.options = options || {};\n    }\n  }\n\n  _createClass(ImageUrlBuilder, [{\n    key: \"withOptions\",\n    value: function withOptions(options) {\n      return new ImageUrlBuilder(this, options);\n    } // The image to be represented. Accepts a Sanity 'image'-document, 'asset'-document or\n    // _id of asset. To get the benefit of automatic hot-spot/crop integration with the content\n    // studio, the 'image'-document must be provided.\n\n  }, {\n    key: \"image\",\n    value: function image(source) {\n      return this.withOptions({\n        source: source\n      });\n    } // Specify the dataset\n\n  }, {\n    key: \"dataset\",\n    value: function dataset(_dataset) {\n      return this.withOptions({\n        dataset: _dataset\n      });\n    } // Specify the projectId\n\n  }, {\n    key: \"projectId\",\n    value: function projectId(_projectId) {\n      return this.withOptions({\n        projectId: _projectId\n      });\n    } // Specify background color\n\n  }, {\n    key: \"bg\",\n    value: function bg(_bg) {\n      return this.withOptions({\n        bg: _bg\n      });\n    } // Specify the width of the image in pixels\n\n  }, {\n    key: \"width\",\n    value: function width(_width) {\n      return this.withOptions({\n        width: _width\n      });\n    } // Specify the height of the image in pixels\n\n  }, {\n    key: \"height\",\n    value: function height(_height) {\n      return this.withOptions({\n        height: _height\n      });\n    } // Specify focal point in fraction of image dimensions. Each component 0.0-1.0\n\n  }, {\n    key: \"focalPoint\",\n    value: function focalPoint(x, y) {\n      return this.withOptions({\n        focalPoint: {\n          x: x,\n          y: y\n        }\n      });\n    }\n  }, {\n    key: \"maxWidth\",\n    value: function maxWidth(_maxWidth) {\n      return this.withOptions({\n        maxWidth: _maxWidth\n      });\n    }\n  }, {\n    key: \"minWidth\",\n    value: function minWidth(_minWidth) {\n      return this.withOptions({\n        minWidth: _minWidth\n      });\n    }\n  }, {\n    key: \"maxHeight\",\n    value: function maxHeight(_maxHeight) {\n      return this.withOptions({\n        maxHeight: _maxHeight\n      });\n    }\n  }, {\n    key: \"minHeight\",\n    value: function minHeight(_minHeight) {\n      return this.withOptions({\n        minHeight: _minHeight\n      });\n    } // Specify width and height in pixels\n\n  }, {\n    key: \"size\",\n    value: function size(width, height) {\n      return this.withOptions({\n        width: width,\n        height: height\n      });\n    } // Specify blur between 0 and 100\n\n  }, {\n    key: \"blur\",\n    value: function blur(_blur) {\n      return this.withOptions({\n        blur: _blur\n      });\n    }\n  }, {\n    key: \"sharpen\",\n    value: function sharpen(_sharpen) {\n      return this.withOptions({\n        sharpen: _sharpen\n      });\n    } // Specify the desired rectangle of the image\n\n  }, {\n    key: \"rect\",\n    value: function rect(left, top, width, height) {\n      return this.withOptions({\n        rect: {\n          left: left,\n          top: top,\n          width: width,\n          height: height\n        }\n      });\n    } // Specify the image format of the image. 'jpg', 'pjpg', 'png', 'webp'\n\n  }, {\n    key: \"format\",\n    value: function format(_format) {\n      return this.withOptions({\n        format: _format\n      });\n    }\n  }, {\n    key: \"invert\",\n    value: function invert(_invert) {\n      return this.withOptions({\n        invert: _invert\n      });\n    } // Rotation in degrees 0, 90, 180, 270\n\n  }, {\n    key: \"orientation\",\n    value: function orientation(_orientation) {\n      return this.withOptions({\n        orientation: _orientation\n      });\n    } // Compression quality 0-100\n\n  }, {\n    key: \"quality\",\n    value: function quality(_quality) {\n      return this.withOptions({\n        quality: _quality\n      });\n    } // Make it a download link. Parameter is default filename.\n\n  }, {\n    key: \"forceDownload\",\n    value: function forceDownload(download) {\n      return this.withOptions({\n        download: download\n      });\n    } // Flip image horizontally\n\n  }, {\n    key: \"flipHorizontal\",\n    value: function flipHorizontal() {\n      return this.withOptions({\n        flipHorizontal: true\n      });\n    } // Flip image verically\n\n  }, {\n    key: \"flipVertical\",\n    value: function flipVertical() {\n      return this.withOptions({\n        flipVertical: true\n      });\n    } // Ignore crop/hotspot from image record, even when present\n\n  }, {\n    key: \"ignoreImageParams\",\n    value: function ignoreImageParams() {\n      return this.withOptions({\n        ignoreImageParams: true\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit(value) {\n      if (validFits.indexOf(value) === -1) {\n        throw new Error(\"Invalid fit mode \\\"\".concat(value, \"\\\"\"));\n      }\n\n      return this.withOptions({\n        fit: value\n      });\n    }\n  }, {\n    key: \"crop\",\n    value: function crop(value) {\n      if (validCrops.indexOf(value) === -1) {\n        throw new Error(\"Invalid crop mode \\\"\".concat(value, \"\\\"\"));\n      }\n\n      return this.withOptions({\n        crop: value\n      });\n    }\n  }, {\n    key: \"auto\",\n    value: function auto(value) {\n      if (validAutoModes.indexOf(value) === -1) {\n        throw new Error(\"Invalid auto mode \\\"\".concat(value, \"\\\"\"));\n      }\n\n      return this.withOptions({\n        auto: value\n      });\n    } // Gets the url based on the submitted parameters\n\n  }, {\n    key: \"url\",\n    value: function url() {\n      return (0, _urlForImage[\"default\"])(this.options);\n    } // Synonym for url()\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.url();\n    }\n  }]);\n\n  return ImageUrlBuilder;\n}();\n\nfunction urlBuilder(options) {\n  // Did we get a SanityClient?\n  if (options && _typeof(options.clientConfig) === 'object') {\n    // Inherit config from client\n    return new ImageUrlBuilder(null, {\n      baseUrl: options.clientConfig.apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n      projectId: options.clientConfig.projectId,\n      dataset: options.clientConfig.dataset\n    });\n  } // Or just accept the options as given\n\n\n  return new ImageUrlBuilder(null, options);\n}","\"use strict\";\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = urlForImage;\nObject.defineProperty(exports, \"parseSource\", {\n  enumerable: true,\n  get: function get() {\n    return _parseSource[\"default\"];\n  }\n});\n\nvar _parseSource = _interopRequireDefault(require(\"./parseSource\"));\n\nvar _parseAssetId = _interopRequireDefault(require(\"./parseAssetId\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar SPEC_NAME_TO_URL_NAME_MAPPINGS = [['width', 'w'], ['height', 'h'], ['format', 'fm'], ['download', 'dl'], ['blur', 'blur'], ['sharpen', 'sharp'], ['invert', 'invert'], ['orientation', 'or'], ['minHeight', 'min-h'], ['maxHeight', 'max-h'], ['minWidth', 'min-w'], ['maxWidth', 'max-w'], ['quality', 'q'], ['fit', 'fit'], ['crop', 'crop'], ['auto', 'auto']];\n\nfunction urlForImage(options) {\n  var spec = _objectSpread({}, options || {});\n\n  var source = spec.source;\n  delete spec.source;\n  var image = (0, _parseSource[\"default\"])(source);\n\n  if (!image) {\n    return null;\n  }\n\n  var asset = (0, _parseAssetId[\"default\"])(image.asset._ref || image.asset._id); // Compute crop rect in terms of pixel coordinates in the raw source image\n\n  var crop = {\n    left: Math.round(image.crop.left * asset.width),\n    top: Math.round(image.crop.top * asset.height)\n  };\n  crop.width = Math.round(asset.width - image.crop.right * asset.width - crop.left);\n  crop.height = Math.round(asset.height - image.crop.bottom * asset.height - crop.top); // Compute hot spot rect in terms of pixel coordinates\n\n  var hotSpotVerticalRadius = image.hotspot.height * asset.height / 2;\n  var hotSpotHorizontalRadius = image.hotspot.width * asset.width / 2;\n  var hotSpotCenterX = image.hotspot.x * asset.width;\n  var hotSpotCenterY = image.hotspot.y * asset.height;\n  var hotspot = {\n    left: hotSpotCenterX - hotSpotHorizontalRadius,\n    top: hotSpotCenterY - hotSpotVerticalRadius,\n    right: hotSpotCenterX + hotSpotHorizontalRadius,\n    bottom: hotSpotCenterY + hotSpotVerticalRadius\n  };\n  spec.asset = asset; // If irrelevant, or if we are requested to: don't perform crop/fit based on\n  // the crop/hotspot.\n\n  if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {\n    spec = _objectSpread({}, spec, fit({\n      crop: crop,\n      hotspot: hotspot\n    }, spec));\n  }\n\n  return specToImageUrl(spec);\n} // eslint-disable-next-line complexity\n\n\nfunction specToImageUrl(spec) {\n  var cdnUrl = spec.baseUrl || 'https://cdn.sanity.io';\n  var filename = \"\".concat(spec.asset.id, \"-\").concat(spec.asset.width, \"x\").concat(spec.asset.height, \".\").concat(spec.asset.format);\n  var baseUrl = \"\".concat(cdnUrl, \"/images/\").concat(spec.projectId, \"/\").concat(spec.dataset, \"/\").concat(filename);\n  var params = [];\n\n  if (spec.rect) {\n    // Only bother url with a crop if it actually crops anything\n    var isEffectiveCrop = spec.rect.left != 0 || spec.rect.top != 0 || spec.rect.height != spec.asset.height || spec.rect.width != spec.asset.width;\n\n    if (isEffectiveCrop) {\n      params.push(\"rect=\".concat(spec.rect.left, \",\").concat(spec.rect.top, \",\").concat(spec.rect.width, \",\").concat(spec.rect.height));\n    }\n  }\n\n  if (spec.bg) {\n    params.push(\"bg=\".concat(spec.bg));\n  }\n\n  if (spec.focalPoint) {\n    params.push(\"fp-x=\".concat(spec.focalPoint.x));\n    params.push(\"fp-x=\".concat(spec.focalPoint.y));\n  }\n\n  if (spec.flipHorizontal || spec.flipVertical) {\n    params.push(\"flip=\".concat(spec.flipHorizontal ? 'h' : '').concat(spec.flipVertical ? 'v' : ''));\n  } // Map from spec name to url param name, and allow using the actual param name as an alternative\n\n\n  SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach(function (mapping) {\n    var _mapping = _slicedToArray(mapping, 2),\n        specName = _mapping[0],\n        param = _mapping[1];\n\n    if (typeof spec[specName] !== 'undefined') {\n      params.push(\"\".concat(param, \"=\").concat(encodeURIComponent(spec[specName])));\n    } else if (typeof spec[param] !== 'undefined') {\n      params.push(\"\".concat(param, \"=\").concat(encodeURIComponent(spec[param])));\n    }\n  });\n\n  if (params.length === 0) {\n    return baseUrl;\n  }\n\n  return \"\".concat(baseUrl, \"?\").concat(params.join('&'));\n}\n\nfunction fit(source, spec) {\n  var result = {\n    width: spec.width,\n    height: spec.height // If we are not constraining the aspect ratio, we'll just use the whole crop\n\n  };\n\n  if (!(spec.width && spec.height)) {\n    result.rect = source.crop;\n    return result;\n  }\n\n  var crop = source.crop;\n  var hotspot = source.hotspot; // If we are here, that means aspect ratio is locked and fitting will be a bit harder\n\n  var desiredAspectRatio = spec.width / spec.height;\n  var cropAspectRatio = crop.width / crop.height;\n\n  if (cropAspectRatio > desiredAspectRatio) {\n    // The crop is wider than the desired aspect ratio. That means we are cutting from the sides\n    var _height = crop.height;\n\n    var _width = _height * desiredAspectRatio;\n\n    var _top = crop.top; // Center output horizontally over hotspot\n\n    var hotspotXCenter = (hotspot.right - hotspot.left) / 2 + hotspot.left;\n\n    var _left = hotspotXCenter - _width / 2; // Keep output within crop\n\n\n    if (_left < crop.left) {\n      _left = crop.left;\n    } else if (_left + _width > crop.left + crop.width) {\n      _left = crop.left + crop.width - _width;\n    }\n\n    result.rect = {\n      left: Math.round(_left),\n      top: Math.round(_top),\n      width: Math.round(_width),\n      height: Math.round(_height)\n    };\n    return result;\n  } // The crop is taller than the desired ratio, we are cutting from top and bottom\n\n\n  var width = crop.width;\n  var height = width / desiredAspectRatio;\n  var left = crop.left; // Center output vertically over hotspot\n\n  var hotspotYCenter = (hotspot.bottom - hotspot.top) / 2 + hotspot.top;\n  var top = hotspotYCenter - height / 2; // Keep output rect within crop\n\n  if (top < crop.top) {\n    top = crop.top;\n  } else if (top + height > crop.top + crop.height) {\n    top = crop.top + crop.height - height;\n  }\n\n  result.rect = {\n    left: Math.max(0, Math.floor(left)),\n    top: Math.max(0, Math.floor(top)),\n    width: Math.round(width),\n    height: Math.round(height)\n  };\n  return result;\n} // For backwards-compatibility","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = parseSource;\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n} // Convert an asset-id, asset or image to an image record suitable for processing\n// eslint-disable-next-line complexity\n\n\nfunction parseSource(source) {\n  if (!source) {\n    return null;\n  }\n\n  var image;\n\n  if (typeof source === 'string' && isUrl(source)) {\n    // Someone passed an existing image url?\n    image = {\n      asset: {\n        _ref: urlToId(source)\n      }\n    };\n  } else if (typeof source === 'string') {\n    // Just an asset id\n    image = {\n      asset: {\n        _ref: source\n      }\n    };\n  } else if (typeof source._ref === 'string') {\n    // We just got passed an asset directly\n    image = {\n      asset: source\n    };\n  } else if (source._id) {\n    // If we were passed an image asset document\n    image = {\n      asset: {\n        _ref: source._id\n      }\n    };\n  } else if (source.asset && source.asset.url && !source.asset._ref) {\n    image = {\n      asset: {\n        _ref: urlToId(source.asset.url)\n      }\n    };\n  } else if (_typeof(source.asset) === 'object') {\n    image = source;\n  } else {\n    // We got something that does not look like an image, or it is an image\n    // that currently isn't sporting an asset.\n    return null;\n  }\n\n  if (source.crop) {\n    image.crop = source.crop;\n  }\n\n  if (source.hotspot) {\n    image.hotspot = source.hotspot;\n  }\n\n  return applyDefaults(image);\n}\n\nfunction isUrl(url) {\n  return /^https?:\\/\\//.test(\"\".concat(url));\n}\n\nfunction urlToId(url) {\n  var parts = url.split('/').slice(-1);\n  return \"image-\".concat(parts[0]).replace(/\\.([a-z]+)$/, '-$1');\n} // Mock crop and hotspot if image lacks it\n\n\nfunction applyDefaults(image) {\n  if (image.crop && image.hotspot) {\n    return image;\n  } // We need to pad in default values for crop or hotspot\n\n\n  var result = Object.assign({}, image);\n\n  if (!result.crop) {\n    result.crop = {\n      left: 0,\n      top: 0,\n      bottom: 0,\n      right: 0\n    };\n  }\n\n  if (!result.hotspot) {\n    result.hotspot = {\n      x: 0.5,\n      y: 0.5,\n      height: 1.0,\n      width: 1.0\n    };\n  }\n\n  return result;\n}","\"use strict\";\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = parseAssetId;\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar example = 'image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg';\n\nfunction parseAssetId(ref) {\n  var _ref$split = ref.split('-'),\n      _ref$split2 = _slicedToArray(_ref$split, 4),\n      id = _ref$split2[1],\n      dimensionString = _ref$split2[2],\n      format = _ref$split2[3];\n\n  if (!id || !dimensionString || !format) {\n    throw new Error(\"Malformed asset _ref '\".concat(ref, \"'. Expected an id like \\\"\").concat(example, \"\\\".\"));\n  }\n\n  var _dimensionString$spli = dimensionString.split('x'),\n      _dimensionString$spli2 = _slicedToArray(_dimensionString$spli, 2),\n      imgWidthStr = _dimensionString$spli2[0],\n      imgHeightStr = _dimensionString$spli2[1];\n\n  var width = +imgWidthStr;\n  var height = +imgHeightStr;\n  var isValidAssetId = isFinite(width) && isFinite(height);\n\n  if (!isValidAssetId) {\n    throw new Error(\"Malformed asset _ref '\".concat(ref, \"'. Expected an id like \\\"\").concat(example, \"\\\".\"));\n  }\n\n  return {\n    id: id,\n    width: width,\n    height: height,\n    format: format\n  };\n}","\"use strict\";\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nvar objectAssign = require('object-assign');\n\nvar buildMarksTree = require('./buildMarksTree');\n\nvar nestLists = require('./nestLists');\n\nvar generateKeys = require('./generateKeys');\n\nvar mergeSerializers = require('./mergeSerializers'); // Properties to extract from props and pass to serializers as options\n\n\nvar optionProps = ['projectId', 'dataset', 'imageOptions'];\n\nvar isDefined = function isDefined(val) {\n  return typeof val !== 'undefined';\n};\n\nvar defaults = {\n  imageOptions: {}\n};\n\nfunction blocksToNodes(h, properties, defaultSerializers, serializeSpan) {\n  var props = objectAssign({}, defaults, properties);\n  var rawBlocks = Array.isArray(props.blocks) ? props.blocks : [props.blocks];\n  var keyedBlocks = generateKeys(rawBlocks);\n  var blocks = nestLists(keyedBlocks, props.listNestMode);\n  var serializers = mergeSerializers(defaultSerializers, props.serializers || {});\n  var options = optionProps.reduce(function (opts, key) {\n    var value = props[key];\n\n    if (isDefined(value)) {\n      opts[key] = value;\n    }\n\n    return opts;\n  }, {});\n\n  function serializeNode(node, index, siblings, isInline) {\n    if (isList(node)) {\n      return serializeList(node);\n    }\n\n    if (isListItem(node)) {\n      return serializeListItem(node, findListItemIndex(node, siblings));\n    }\n\n    if (isSpan(node)) {\n      return serializeSpan(node, serializers, index, {\n        serializeNode: serializeNode\n      });\n    }\n\n    return serializeBlock(node, index, isInline);\n  }\n\n  function findListItemIndex(node, siblings) {\n    var index = 0;\n\n    for (var i = 0; i < siblings.length; i++) {\n      if (siblings[i] === node) {\n        return index;\n      }\n\n      if (!isListItem(siblings[i])) {\n        continue;\n      }\n\n      index++;\n    }\n\n    return index;\n  }\n\n  function serializeBlock(block, index, isInline) {\n    var tree = buildMarksTree(block);\n    var children = tree.map(function (node, i, siblings) {\n      return serializeNode(node, i, siblings, true);\n    });\n    var blockProps = {\n      key: block._key || \"block-\".concat(index),\n      node: block,\n      isInline: isInline,\n      serializers: serializers,\n      options: options\n    };\n    return h(serializers.block, blockProps, children);\n  }\n\n  function serializeListItem(block, index) {\n    var key = block._key;\n    var tree = buildMarksTree(block);\n    var children = tree.map(serializeNode);\n    return h(serializers.listItem, {\n      node: block,\n      serializers: serializers,\n      index: index,\n      key: key,\n      options: options\n    }, children);\n  }\n\n  function serializeList(list) {\n    var type = list.listItem;\n    var level = list.level;\n    var key = list._key;\n    var children = list.children.map(serializeNode);\n    return h(serializers.list, {\n      key: key,\n      level: level,\n      type: type,\n      options: options\n    }, children);\n  } // Default to false, so `undefined` will evaluate to the default here\n\n\n  var renderContainerOnSingleChild = Boolean(props.renderContainerOnSingleChild);\n  var nodes = blocks.map(serializeNode);\n\n  if (renderContainerOnSingleChild || nodes.length > 1) {\n    var containerProps = props.className ? {\n      className: props.className\n    } : {};\n    return h(serializers.container, containerProps, nodes);\n  }\n\n  if (nodes[0]) {\n    return nodes[0];\n  }\n\n  return typeof serializers.empty === 'function' ? h(serializers.empty) : serializers.empty;\n}\n\nfunction isList(block) {\n  return block._type === 'list' && block.listItem;\n}\n\nfunction isListItem(block) {\n  return block._type === 'block' && block.listItem;\n}\n\nfunction isSpan(block) {\n  return typeof block === 'string' || block.marks || block._type === 'span';\n}\n\nmodule.exports = blocksToNodes;","\"use strict\";\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.function.bind\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.array.reduce\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nvar defaultMarks = ['strong', 'em', 'code', 'underline', 'strike-through'];\n\nvar buildMarksTree = function buildMarksTree(block) {\n  var children = block.children,\n      markDefs = block.markDefs;\n\n  if (!children || !children.length) {\n    return [];\n  }\n\n  var sortedMarks = children.map(sortMarksByOccurences);\n  var rootNode = {\n    _type: 'span',\n    children: []\n  };\n  var nodeStack = [rootNode];\n  children.forEach(function (span, i) {\n    var marksNeeded = sortedMarks[i];\n\n    if (!marksNeeded) {\n      var lastNode = nodeStack[nodeStack.length - 1];\n      lastNode.children.push(span);\n      return;\n    }\n\n    var pos = 1; // Start at position one. Root is always plain and should never be removed. (?)\n\n    if (nodeStack.length > 1) {\n      for (pos; pos < nodeStack.length; pos++) {\n        var mark = nodeStack[pos].markKey;\n        var index = marksNeeded.indexOf(mark); // eslint-disable-next-line max-depth\n\n        if (index === -1) {\n          break;\n        }\n\n        marksNeeded.splice(index, 1);\n      }\n    } // Keep from beginning to first miss\n\n\n    nodeStack = nodeStack.slice(0, pos); // Add needed nodes\n\n    var currentNode = findLastParentNode(nodeStack);\n    marksNeeded.forEach(function (mark) {\n      var node = {\n        _type: 'span',\n        _key: span._key,\n        children: [],\n        mark: markDefs.find(function (def) {\n          return def._key === mark;\n        }) || mark,\n        markKey: mark\n      };\n      currentNode.children.push(node);\n      nodeStack.push(node);\n      currentNode = node;\n    }); // Split at newlines to make individual line chunks, but keep newline\n    // characters as individual elements in the array. We use these characters\n    // in the span serializer to trigger hard-break rendering\n\n    if (isTextSpan(span)) {\n      var lines = span.text.split('\\n');\n\n      for (var line = lines.length; line-- > 1;) {\n        lines.splice(line, 0, '\\n');\n      }\n\n      currentNode.children = currentNode.children.concat(lines);\n    } else {\n      currentNode.children = currentNode.children.concat(span);\n    }\n  });\n  return rootNode.children;\n}; // We want to sort all the marks of all the spans in the following order:\n// 1. Marks that are shared amongst the most adjacent siblings\n// 2. Non-default marks (links, custom metadata)\n// 3. Built-in, plain marks (bold, emphasis, code etc)\n\n\nfunction sortMarksByOccurences(span, i, spans) {\n  if (!span.marks || span.marks.length === 0) {\n    return span.marks || [];\n  }\n\n  var markOccurences = span.marks.reduce(function (occurences, mark) {\n    occurences[mark] = occurences[mark] ? occurences[mark] + 1 : 1;\n\n    for (var siblingIndex = i + 1; siblingIndex < spans.length; siblingIndex++) {\n      var sibling = spans[siblingIndex];\n\n      if (sibling.marks && Array.isArray(sibling.marks) && sibling.marks.indexOf(mark) !== -1) {\n        occurences[mark]++;\n      } else {\n        break;\n      }\n    }\n\n    return occurences;\n  }, {});\n  var sortByOccurence = sortMarks.bind(null, markOccurences); // Slicing because sort() mutates the input\n\n  return span.marks.slice().sort(sortByOccurence);\n}\n\nfunction sortMarks(occurences, markA, markB) {\n  var aOccurences = occurences[markA] || 0;\n  var bOccurences = occurences[markB] || 0;\n\n  if (aOccurences !== bOccurences) {\n    return bOccurences - aOccurences;\n  }\n\n  var aDefaultPos = defaultMarks.indexOf(markA);\n  var bDefaultPos = defaultMarks.indexOf(markB); // Sort default marks last\n\n  if (aDefaultPos !== bDefaultPos) {\n    return aDefaultPos - bDefaultPos;\n  } // Sort other marks simply by key\n\n\n  if (markA < markB) {\n    return -1;\n  } else if (markA > markB) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction isTextSpan(node) {\n  return node._type === 'span' && typeof node.text === 'string' && (Array.isArray(node.marks) || typeof node.marks === 'undefined');\n}\n\nfunction findLastParentNode(nodes) {\n  for (var i = nodes.length - 1; i >= 0; i--) {\n    var node = nodes[i];\n\n    if (node._type === 'span' && node.children) {\n      return node;\n    }\n  }\n\n  return undefined;\n}\n\nmodule.exports = buildMarksTree;","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","\"use strict\";\n\nvar objectAssign = require('object-assign');\n/* eslint-disable max-depth, complexity */\n\n\nfunction nestLists(blocks) {\n  var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'html';\n  var tree = [];\n  var currentList;\n\n  for (var i = 0; i < blocks.length; i++) {\n    var block = blocks[i];\n\n    if (!isListBlock(block)) {\n      tree.push(block);\n      currentList = null;\n      continue;\n    } // Start of a new list?\n\n\n    if (!currentList) {\n      currentList = listFromBlock(block);\n      tree.push(currentList);\n      continue;\n    } // New list item within same list?\n\n\n    if (blockMatchesList(block, currentList)) {\n      currentList.children.push(block);\n      continue;\n    } // Different list props, are we going deeper?\n\n\n    if (block.level > currentList.level) {\n      var newList = listFromBlock(block);\n\n      if (mode === 'html') {\n        // Because HTML is kinda weird, nested lists needs to be nested within list items\n        // So while you would think that we could populate the parent list with a new sub-list,\n        // We actually have to target the last list element (child) of the parent.\n        // However, at this point we need to be very careful - simply pushing to the list of children\n        // will mutate the input, and we don't want to blindly clone the entire tree.\n        // Clone the last child while adding our new list as the last child of it\n        var lastListItem = lastChild(currentList);\n        var newLastChild = objectAssign({}, lastListItem, {\n          children: lastListItem.children.concat(newList)\n        }); // Swap the last child\n\n        currentList.children[currentList.children.length - 1] = newLastChild;\n      } else {\n        currentList.children.push(newList);\n      } // Set the newly created, deeper list as the current\n\n\n      currentList = newList;\n      continue;\n    } // Different list props, are we going back up the tree?\n\n\n    if (block.level < currentList.level) {\n      // Current list has ended, and we need to hook up with a parent of the same level and type\n      var match = findListMatching(tree[tree.length - 1], block);\n\n      if (match) {\n        currentList = match;\n        currentList.children.push(block);\n        continue;\n      } // Similar parent can't be found, assume new list\n\n\n      currentList = listFromBlock(block);\n      tree.push(currentList);\n      continue;\n    } // Different list props, different list style?\n\n\n    if (block.listItem !== currentList.listItem) {\n      var _match = findListMatching(tree[tree.length - 1], {\n        level: block.level\n      });\n\n      if (_match && _match.listItem === block.listItem) {\n        currentList = _match;\n        currentList.children.push(block);\n        continue;\n      } else {\n        currentList = listFromBlock(block);\n        tree.push(currentList);\n        continue;\n      }\n    } // eslint-disable-next-line no-console\n\n\n    console.warn('Unknown state encountered for block', block);\n    tree.push(block);\n  }\n\n  return tree;\n}\n\nfunction isListBlock(block) {\n  return Boolean(block.listItem);\n}\n\nfunction blockMatchesList(block, list) {\n  return block.level === list.level && block.listItem === list.listItem;\n}\n\nfunction listFromBlock(block) {\n  return {\n    _type: 'list',\n    _key: \"\".concat(block._key, \"-parent\"),\n    level: block.level,\n    listItem: block.listItem,\n    children: [block]\n  };\n}\n\nfunction lastChild(block) {\n  return block.children && block.children[block.children.length - 1];\n}\n\nfunction findListMatching(rootNode, matching) {\n  var filterOnType = typeof matching.listItem === 'string';\n\n  if (rootNode._type === 'list' && rootNode.level === matching.level && filterOnType && rootNode.listItem === matching.listItem) {\n    return rootNode;\n  }\n\n  var node = lastChild(rootNode);\n\n  if (!node) {\n    return false;\n  }\n\n  return findListMatching(node, matching);\n}\n\nmodule.exports = nestLists;","\"use strict\";\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nvar objectAssign = require('object-assign');\n\nmodule.exports = function (blocks) {\n  return blocks.map(function (block) {\n    if (block._key) {\n      return block;\n    }\n\n    return objectAssign({\n      _key: getStaticKey(block)\n    }, block);\n  });\n};\n\nfunction getStaticKey(item) {\n  return checksum(JSON.stringify(item)).toString(36).replace(/[^A-Za-z0-9]/g, '');\n}\n/* eslint-disable no-bitwise */\n\n\nfunction checksum(str) {\n  var hash = 0;\n  var strlen = str.length;\n\n  if (strlen === 0) {\n    return hash;\n  }\n\n  for (var i = 0; i < strlen; i++) {\n    hash = (hash << 5) - hash + str.charCodeAt(i);\n    hash &= hash; // Convert to 32bit integer\n  }\n\n  return hash;\n}\n/* eslint-enable no-bitwise */","'use strict';\n\nvar React = require('react');\n\nvar _require = require('@sanity/block-content-to-hyperscript/internals'),\n    getSerializers = _require.getSerializers;\n\nvar renderNode = React.createElement;\n\nvar _getSerializers = getSerializers(renderNode),\n    defaultSerializers = _getSerializers.defaultSerializers,\n    serializeSpan = _getSerializers.serializeSpan;\n\nmodule.exports = {\n  serializeSpan: serializeSpan,\n  serializers: defaultSerializers,\n  renderProps: {\n    nestMarks: true\n  }\n};"],"sourceRoot":""}