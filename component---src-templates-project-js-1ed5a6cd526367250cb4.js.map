{"version":3,"sources":["webpack:///./src/templates/project.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/richImage.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/video.js","webpack:///./src/components/slideshow.js","webpack:///./src/components/blockContent.js"],"names":["query","Wrapper","styled","article","_templateObject","Content","div","_templateObject2","figure","ProjectInfo","section","_templateObject3","ProjectTemplate","_ref","project","data","title","body","_rawBody","mainImage","category","stack","live","code","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","_components_richImage__WEBPACK_IMPORTED_MODULE_3__","image","map","s","key","_components_blockContent__WEBPACK_IMPORTED_MODULE_4__","blocks","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","_sanity_image_url__WEBPACK_IMPORTED_MODULE_1__","_sanity_image_url__WEBPACK_IMPORTED_MODULE_1___default","_studio_sanity_json__WEBPACK_IMPORTED_MODULE_2__","builder","imageUrlBuilder","sanityConfig","api","RichImage","source","alt","id","asset","caption","url","src","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","siteTitle","react_default","gatsby_browser_entry","to","Layout","children","_856328897","Fragment","header","Date","getFullYear","Video","node","autoPlay","loop","muted","playsInline","Slideshower","ul","props","length","Slide","li","index","Slideshow","slides","len","_useState","useState","setIndex","className","type","onClick","Math","max","disabled","min","slide","_key","components_richImage","serializers","types","video","components_video","richImage","_ref2","block","style","test","replace","BlockRenderer","slideshow","_ref3","components_slideshow","BlockContent","_ref4","BlockContent_default"],"mappings":"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","file":"component---src-templates-project-js-1ed5a6cd526367250cb4.js","sourcesContent":["import React from \"react\"\n\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport RichImage from \"../components/richImage\"\nimport BlockContent from \"../components/blockContent\"\nimport SEO from \"../components/seo\"\n\nexport const query = graphql`\n  query ProjectQuery($slug: String!) {\n    project: sanityProject(slug: { current: { eq: $slug } }) {\n      title\n      _rawDescription(resolveReferences: { maxDepth: 5 })\n      _rawBody(resolveReferences: { maxDepth: 5 })\n      mainImage {\n        asset {\n          id\n        }\n        alt\n      }\n      category {\n        name\n      }\n      stack\n      live\n      code\n    }\n  }\n`\n\nconst Wrapper = styled.article`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst figure = 800\nconst img = 600\nconst caption = figure - img\n\nconst Content = styled.div`\n  p {\n    max-width: 400px;\n    margin: 1em 0;\n  }\n\n  h1 {\n    margin: 1em 0;\n  }\n  li {\n    padding: 0 2px;\n    display: inline;\n  }\n\n  figure {\n    max-width: ${figure}px;\n    display: flex;\n    flex-flow: row wrap;\n    align-items: center;\n    figcaption {\n      max-width: ${caption}px;\n      font-size: 0.9em;\n    }\n  }\n\n  video,\n  img {\n    display: inline;\n    max-height: 80vh;\n    max-width: 80%;\n    padding-top: 2em;\n  }\n\n  video {\n    max-height: 500px;\n  }\n`\nconst ProjectInfo = styled.section`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n\n  li {\n    display: inline;\n    margin-left: 1em;\n  }\n\n  img {\n    max-height: 600px;\n    margin: auto;\n  }\n`\n\nconst ProjectTemplate = ({ data }) => {\n  const { project } = data\n\n  const {\n    title,\n    _rawBody: body,\n    mainImage,\n    category,\n    stack,\n    live,\n    code,\n  } = project\n  return (\n    <Layout>\n      <SEO title={title} />\n      <Wrapper>\n        <ProjectInfo>\n          <div>\n            <h1>{title}</h1>\n            <RichImage image={mainImage} />\n          </div>\n          <div>\n            {category && category}\n            {stack && (\n              <ul>\n                {stack.map(s => (\n                  <li key={s}>{s}</li>\n                ))}\n              </ul>\n            )}\n            {code && code}\n            {live && live}\n          </div>\n        </ProjectInfo>\n        <Content>\n          <BlockContent blocks={body} />\n        </Content>\n      </Wrapper>\n    </Layout>\n  )\n}\n\nexport default ProjectTemplate\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport imageUrlBuilder from \"@sanity/image-url\"\n\nimport sanityConfig from \"../../../studio/sanity.json\"\n\nconst builder = imageUrlBuilder(sanityConfig.api)\n\nexport function imageUrlFor(source) {\n  return builder.image(source)\n}\n\nconst RichImage = ({ image }) => {\n  const {\n    alt,\n    asset: { id },\n    caption,\n  } = image\n\n  const url = imageUrlFor(id)\n\n  return (\n    <figure>\n      <img alt={alt} src={url} />\n      {caption && <figcaption>{caption}</figcaption>}\n    </figure>\n  )\n}\n\nexport default RichImage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <div>\n      <h1>\n        <Link to=\"/\">{siteTitle}</Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport \"typeface-montserrat\"\nimport \"typeface-lato\"\nimport \"./normalize.css\"\nimport \"./reset.css\"\nimport \"./typography.css\"\n\nimport Header from \"./header\"\n\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1200px) auto;\n  justify-items: center;\n  main {\n    grid-area: 1/2;\n    width: 100%;\n  }\n  img {\n    max-width: 100vw;\n  }\n\n  a {\n    color: inherit;\n    text-decoration: underline;\n  }\n`\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <Content>\n        <main>{children}</main>\n      </Content>\n      <footer>{`© ${new Date().getFullYear()}`}</footer>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\n\nconst Video = ({ node }) => {\n  const { url } = node.source.asset\n  return (\n    <>\n      <video autoPlay loop muted playsInline src={url} />\n    </>\n  )\n}\n\nexport default Video\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\n\nimport RichImage from \"./richImage\"\n\nconst Slideshower = styled.ul`\n  overflow: hidden;\n  width: 100%;\n\n  div {\n    width: ${props => props.length * 100}%;\n  }\n`\n\nconst Slide = styled.li`\n  transform: translate3d(${props => props.index * -100}%, 0, 0);\n  transition: transform 250ms;\n  float: left;\n\n  figure {\n    flex-flow: column nowrap !important;\n    align-items: flex-start !important;\n    justify-content: flex-start !important;\n  }\n`\n\nconst Slideshow = ({ slides }) => {\n  const len = slides.length\n  const [index, setIndex] = useState(0)\n  const handlePrev = () => {\n    setIndex(Math.max(index - 1, 0))\n  }\n  const handleNext = () => {\n    setIndex(Math.min(index + 1, len - 1))\n  }\n  return (\n    <>\n      <div className=\"slideshow-nav\">\n        <button type=\"button\" onClick={handlePrev} disabled={index === 0}>\n          Prev\n        </button>\n        <span>\n          {index + 1} of {len}\n        </span>\n        <button type=\"button\" onClick={handleNext} disabled={index === len - 1}>\n          Next\n        </button>\n      </div>\n      <Slideshower length={len}>\n        <div>\n          {slides.map(slide => (\n            <Slide index={index} key={slide._key}>\n              <RichImage image={slide} />\n            </Slide>\n          ))}\n        </div>\n      </Slideshower>\n    </>\n  )\n}\n\nexport default Slideshow\n","import React from \"react\"\n\nimport BaseBlockContent from \"@sanity/block-content-to-react\"\nimport Video from \"./video\"\nimport RichImage from \"./richImage\"\nimport Slideshow from \"./slideshow\"\n\nconst BlockRenderer = props => {\n  const style = props.node.style || \"normal\"\n\n  if (/^h\\d/.test(style)) {\n    const level = style.replace(/[^\\d]/g, \"\")\n    switch (level) {\n      case \"1\":\n        return <h1 id={props.children[0]}>{props.children}</h1>\n      case \"2\":\n        return <h2>{props.children}</h2>\n      case \"3\":\n        return <h3>{props.children}</h3>\n      case \"4\":\n        return <h4>{props.children}</h4>\n      case \"5\":\n        return <h5>{props.children}</h5>\n      case \"6\":\n        return <h6>{props.children}</h6>\n\n      default:\n        return <h1>{props.children}</h1>\n    }\n  }\n\n  return style === \"blockquote\" ? (\n    <blockquote className=\"my-block-quote\">{props.children}</blockquote>\n  ) : (\n    <p className=\"my-paragraph\">{props.children}</p>\n  )\n}\n\nconst serializers = {\n  types: {\n    video({ node }) {\n      return <Video node={node} />\n    },\n    richImage({ node: image }) {\n      return <RichImage image={image} />\n    },\n    block(props) {\n      return BlockRenderer(props)\n    },\n    slideshow({ node: { slides } }) {\n      return <Slideshow slides={slides} />\n    },\n  },\n}\n\nconst BlockContent = ({ blocks }) => (\n  <BaseBlockContent blocks={blocks} serializers={serializers} />\n)\n\nexport default BlockContent\n"],"sourceRoot":""}